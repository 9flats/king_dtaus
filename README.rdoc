= Dtaus

DTAUS is a format for German bank transfers and is short for 
"Datentr√§geraustausch". The format itself totally sucks because it was 
established in the last century, to be used on floppy disks. Still almost 
all German banks use it(they only seem innovative at robbing), and it is 
therefore supported in common banking programs too.

This gem saves you all the trouble when generating dtaus-text. 

== Install

  gem install king_dtaus

== Features
 
* create lastschrift
* create gutschrift


== Example
  
  #create a new dtaus object
  dta = KingDta::Dtaus.new('LK')
  # set sender account
  dta.account = KingDta::Account.new( "bank_account_number", "bank_number", "bank_owner")
  # the following should be done in a loop to add multiple bookings
  # create receiving account
  rec_acnt = KingDta::Account.new( "bank_account_number", "bank_number", "bank_owner" )
  # create booking
  booking = KingDta::Booking.new(rec_acnt, 100.00 )
  # set booking text if you want to
  booking.text = "Thanks for your purchase"
  # add booking
  dta.add( booking )
  # end loop

  # create datausstring and do with it whatever fits your workflow
  my_str = dta.create

also make sure to read the specs


== Credits

This gem used https://rubygems.org/gems/DTAUS as a starting point. 
It was disected, turned into a real class structure, bugs where fixed and 
of course a full test suite ensures its functionality.

Copyright (c) 2009-2010 Georg Leciejewski, 
Bugfixes and enhancements by Georg Ledermann 
released under the MIT license